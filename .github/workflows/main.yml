name: Backend CI
on:
  push:
    branches:
      - develop
      - main
jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Test with pytest
      run: |
        poetry run pytest -vv
      env:
        DB_ENGINE: django.db.backends.sqlite3
        DB_NAME: db.sqlite3
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: user
        DB_PASSWORD: password

  build-and-push-to-dockerhub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to Docker Hub
      uses: docker/build-push-action@v3
      with:
        context: .
        file: Dockerfile
        push: true
        tags: fsdforselfdev/linguista:latest

  # deploy:
  #   name: Pull latest Docker image from Docker Hub
  #   runs-on: ubuntu-latest
  #   needs: build-and-push-to-dockerhub
  #   steps:
  #   - name: executing remote ssh commands to deploy
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.HOST }}
  #       username: ${{ secrets.USER }}
  #       password: ${{ secrets.PASSWORD }}
  #       key: ${{ secrets.SSH_KEY }}
  #       script: |
  #         sudo docker pull fsdforselfdev/linguista:latest
  #         sudo docker stop
  #         sudo docker run --rm -d -p 5000:5000 fsdforselfdev/linguista:latest

  deploy:
    name: Pull latest updates
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASSWORD }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /~/LinguistaAPI
          sudo -S git stash
          sudo -S git pull
          sudo -S chmod +x build.sh
          sudo -S ./build.sh
          sudo -S systemctl restart gunicorn
          sudo -S systemctl reload nginx

  send_message:
    name: Send success message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен.
