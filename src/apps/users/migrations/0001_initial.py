# Generated by Django 4.2.14 on 2024-08-31 07:05

import apps.core.models
import apps.users.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("languages", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Date created"
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="Date modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="Почта")),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=1,
                        null=True,
                        verbose_name="Пол",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=apps.users.models.user_profile_images_path,
                        verbose_name="Картинка профиля",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "db_table_comment": "Пользователи",
                "ordering": ("-date_joined",),
                "get_latest_by": ("created", "date_joined"),
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserNativeLanguage",
            fields=[
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Date created"
                    ),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="Slug")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="native_for_detail",
                        to="languages.language",
                        verbose_name="Язык",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="native_languages_detail",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Родной язык",
                "verbose_name_plural": "Родные языки",
                "db_table_comment": "Родные языки",
                "ordering": ("-created",),
                "get_latest_by": ("created",),
            },
        ),
        migrations.CreateModel(
            name="UserLearningLanguage",
            fields=[
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Date created"
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="Date modified"
                    ),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="Slug")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=256,
                        null=True,
                        verbose_name="Уровень владения",
                    ),
                ),
                (
                    "cover",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="covers",
                        to="languages.languageimage",
                        verbose_name="Обложка изучаемого языка",
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_by_detail",
                        to="languages.language",
                        verbose_name="Язык",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_languages_detail",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Изучаемый язык",
                "verbose_name_plural": "Изучаемые языки",
                "db_table_comment": "Изучаемые языки",
                "ordering": ("-created", "-modified"),
            },
            bases=(apps.core.models.GetObjectBySlugModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="UserDefaultWordsView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Date created"
                    ),
                ),
                (
                    "words_view",
                    models.CharField(
                        choices=[
                            ("standart", "Стандартный"),
                            ("short", "Короткий"),
                            ("long", "Удлиненный"),
                        ],
                        default="standart",
                        max_length=8,
                        verbose_name="Вид карточек слов",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="words_view_setting",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Настройка вида карточек слов по умолчанию",
                "verbose_name_plural": "Настройки вида карточек слов по умолчанию",
                "db_table_comment": "Вид карточек слов по умолчанию для пользователя",
                "ordering": ("-created",),
                "get_latest_by": ("created",),
            },
        ),
        migrations.AddField(
            model_name="user",
            name="learning_languages",
            field=models.ManyToManyField(
                blank=True,
                related_name="learning_by",
                through="users.UserLearningLanguage",
                to="languages.language",
                verbose_name="Изучаемые языки",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="native_languages",
            field=models.ManyToManyField(
                blank=True,
                related_name="native_for",
                through="users.UserNativeLanguage",
                to="languages.language",
                verbose_name="Родные языки",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddConstraint(
            model_name="usernativelanguage",
            constraint=models.UniqueConstraint(
                models.F("language"),
                models.F("user"),
                name="unique_user_native_language",
            ),
        ),
        migrations.AddConstraint(
            model_name="userlearninglanguage",
            constraint=models.UniqueConstraint(
                models.F("language"),
                models.F("user"),
                name="unique_user_learning_language",
            ),
        ),
        migrations.AddConstraint(
            model_name="userdefaultwordsview",
            constraint=models.UniqueConstraint(
                models.F("user"), name="unique_user_words_view"
            ),
        ),
    ]
