# Generated by Django 4.2.5 on 2023-09-22 11:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import languages.models
import vocabulary.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('languages', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Antonym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Antonym',
                'verbose_name_plural': 'Antonyms',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='Date modified')),
                ('title', models.CharField(max_length=256, verbose_name='Collection title')),
                ('description', models.TextField(blank=True, max_length=512, verbose_name='Description')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Collection',
                'verbose_name_plural': 'Collections',
                'ordering': ['-created'],
                'get_latest_by': ['created', 'modified'],
            },
        ),
        migrations.CreateModel(
            name='Definition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='Date modified')),
                ('text', models.CharField(help_text='A definition of a word or phrase', max_length=4096, verbose_name='Definition')),
                ('translation', models.CharField(blank=True, max_length=4096, verbose_name='A translation of the definition')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Definition',
                'verbose_name_plural': 'Definitions',
                'ordering': ['-created'],
                'get_latest_by': ['created', 'modified'],
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Form',
                'verbose_name_plural': 'Forms',
            },
        ),
        migrations.CreateModel(
            name='Similar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Similar',
                'verbose_name_plural': 'Similars',
            },
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='Date modified')),
                ('difference', models.CharField(blank=True, help_text='Difference between these %(class)ss', max_length=512, verbose_name='Difference')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Synonyms',
                'verbose_name_plural': 'Synonyms',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Tag name')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='Date modified')),
                ('text', models.CharField(help_text='A translation of a word or phrase', max_length=4096, verbose_name='Translation')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Translation',
                'verbose_name_plural': 'Translations',
                'ordering': ['-created'],
                'get_latest_by': ['created', 'modified'],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Type name')),
                ('slug', models.SlugField(max_length=64, unique=True, verbose_name='Slug')),
                ('sorting', models.PositiveIntegerField(default=0, help_text='increase to show at top of the list', verbose_name='Sorting order')),
            ],
            options={
                'verbose_name': 'Type',
                'verbose_name_plural': 'Types',
            },
        ),
        migrations.CreateModel(
            name='UsageExample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='Date modified')),
                ('text', models.CharField(help_text='An usage example of a word or phrase', max_length=4096, verbose_name='Usage example')),
                ('translation', models.CharField(blank=True, max_length=4096, verbose_name='A translation of the example')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Usage example',
                'verbose_name_plural': 'Usage examples',
                'ordering': ['-created'],
                'get_latest_by': ['created', 'modified'],
            },
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='Date modified')),
                ('text', models.CharField(max_length=4096, verbose_name='Word or phrase')),
                ('slug', models.SlugField(max_length=4096, unique=True, verbose_name='Slug')),
                ('activity', models.CharField(choices=[('INACTIVE', 'Inactive'), ('ACTIVE', 'Active'), ('MASTERED', 'Mastered')], max_length=8, verbose_name='Activity status')),
                ('is_problematic', models.BooleanField(default=False, verbose_name='Is the word problematic for you')),
                ('pronunciation', models.CharField(blank=True, max_length=4096, verbose_name='Pronunciation')),
                ('transcription', models.CharField(blank=True, max_length=4096, verbose_name='Transcription')),
                ('antonyms', models.ManyToManyField(blank=True, help_text='Words with opposite meanings', related_name='antonym_to+', through='vocabulary.Antonym', to='vocabulary.word', verbose_name='Antonyms')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vocabulary', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Word or phrase',
                'verbose_name_plural': 'Words and phrases',
                'ordering': ['-created'],
                'get_latest_by': ['created', 'modified'],
            },
        ),
        migrations.CreateModel(
            name='WordUsageExamples',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('example', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.usageexample', verbose_name='Usage example')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.word', verbose_name='Word')),
            ],
            options={
                'verbose_name': 'Word usage example',
                'verbose_name_plural': 'Word usage examples',
                'ordering': ['-created'],
                'get_latest_by': ['created'],
            },
        ),
        migrations.CreateModel(
            name='WordTranslations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('translation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.translation', verbose_name='Translation')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.word', verbose_name='Word')),
            ],
            options={
                'verbose_name': 'Word translation',
                'verbose_name_plural': 'Word translations',
                'ordering': ['-created'],
                'get_latest_by': ['created'],
            },
        ),
        migrations.CreateModel(
            name='WordsInCollections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.collection', verbose_name='Collection')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.word', verbose_name='Word')),
            ],
            options={
                'verbose_name': 'Words in collections',
                'verbose_name_plural': 'Words in collections',
                'ordering': ['-created'],
                'get_latest_by': ['created'],
            },
        ),
        migrations.CreateModel(
            name='WordDefinitions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.definition', verbose_name='Definition')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.word', verbose_name='Word')),
            ],
            options={
                'verbose_name': 'Word definition',
                'verbose_name_plural': 'Word definitions',
                'ordering': ['-created'],
                'get_latest_by': ['created'],
            },
        ),
        migrations.AddField(
            model_name='word',
            name='definitions',
            field=models.ManyToManyField(blank=True, related_name='definition_for', through='vocabulary.WordDefinitions', to='vocabulary.definition', verbose_name='Translations'),
        ),
        migrations.AddField(
            model_name='word',
            name='examples',
            field=models.ManyToManyField(blank=True, related_name='usage_example_for', through='vocabulary.WordUsageExamples', to='vocabulary.usageexample', verbose_name='Usage Example'),
        ),
        migrations.AddField(
            model_name='word',
            name='forms',
            field=models.ManyToManyField(blank=True, help_text='Word forms', related_name='form_to+', through='vocabulary.Form', to='vocabulary.word', verbose_name='Forms'),
        ),
        migrations.AddField(
            model_name='word',
            name='language',
            field=models.ForeignKey(default=languages.models.Language.get_default_pk, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='words', to='languages.language', verbose_name='Language'),
        ),
        migrations.AddField(
            model_name='word',
            name='similars',
            field=models.ManyToManyField(blank=True, help_text='Words with similar pronunciation or spelling', related_name='similar_to+', through='vocabulary.Similar', to='vocabulary.word', verbose_name='Similars'),
        ),
        migrations.AddField(
            model_name='word',
            name='synonyms',
            field=models.ManyToManyField(blank=True, help_text='Words with similar meanings', related_name='synonym_to+', through='vocabulary.Synonym', to='vocabulary.word', verbose_name='Synonyms'),
        ),
        migrations.AddField(
            model_name='word',
            name='tags',
            field=models.ManyToManyField(blank=True, to='vocabulary.tag', verbose_name='Word tags'),
        ),
        migrations.AddField(
            model_name='word',
            name='translations',
            field=models.ManyToManyField(blank=True, related_name='translation_for', through='vocabulary.WordTranslations', to='vocabulary.translation', verbose_name='Translations'),
        ),
        migrations.AddField(
            model_name='word',
            name='type',
            field=models.ForeignKey(blank=True, default=vocabulary.models.Type.get_default_pk, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='words', to='vocabulary.type', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='synonym',
            name='from_word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_from_words', to='vocabulary.word'),
        ),
        migrations.AddField(
            model_name='synonym',
            name='to_word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_to_words', to='vocabulary.word'),
        ),
        migrations.AddField(
            model_name='similar',
            name='from_word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_from_words', to='vocabulary.word'),
        ),
        migrations.AddField(
            model_name='similar',
            name='to_word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_to_words', to='vocabulary.word'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('text', models.CharField(max_length=4096, verbose_name='Note text')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.word', verbose_name='Word')),
            ],
            options={
                'verbose_name': 'Заметка',
                'verbose_name_plural': 'Notes',
                'ordering': ['-created'],
                'get_latest_by': ['created'],
            },
        ),
        migrations.CreateModel(
            name='ImageAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('image', models.ImageField(blank=True, help_text='Image association', null=True, upload_to='words/associations/images', verbose_name='Изображение')),
                ('name', models.CharField(blank=True, max_length=64, verbose_name='Image name')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.word', verbose_name='Word')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='form',
            name='from_word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_from_words', to='vocabulary.word'),
        ),
        migrations.AddField(
            model_name='form',
            name='to_word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_to_words', to='vocabulary.word'),
        ),
        migrations.CreateModel(
            name='FavoriteWord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_for', to='vocabulary.word', verbose_name='Word')),
            ],
            options={
                'verbose_name': 'Favorite word',
                'verbose_name_plural': 'Favorite words',
                'ordering': ['-created'],
                'get_latest_by': ['created'],
            },
        ),
        migrations.CreateModel(
            name='FavoriteCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date created')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_for', to='vocabulary.collection', verbose_name='Collection')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Favorite collection',
                'verbose_name_plural': 'Favorite collections',
                'ordering': ['-created'],
                'get_latest_by': ['created'],
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='words',
            field=models.ManyToManyField(blank=True, related_name='collections', through='vocabulary.WordsInCollections', to='vocabulary.word', verbose_name='Words in collection'),
        ),
        migrations.AddField(
            model_name='antonym',
            name='from_word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_from_words', to='vocabulary.word'),
        ),
        migrations.AddField(
            model_name='antonym',
            name='to_word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_to_words', to='vocabulary.word'),
        ),
        migrations.AddConstraint(
            model_name='wordusageexamples',
            constraint=models.UniqueConstraint(fields=('word', 'example'), name='unique_word_example'),
        ),
        migrations.AddConstraint(
            model_name='wordtranslations',
            constraint=models.UniqueConstraint(fields=('word', 'translation'), name='unique_word_translation'),
        ),
        migrations.AddConstraint(
            model_name='wordsincollections',
            constraint=models.UniqueConstraint(fields=('word', 'collection'), name='unique_word_in_collection'),
        ),
        migrations.AddConstraint(
            model_name='worddefinitions',
            constraint=models.UniqueConstraint(fields=('word', 'definition'), name='unique_word_definition'),
        ),
        migrations.AddConstraint(
            model_name='synonym',
            constraint=models.UniqueConstraint(fields=('from_word', 'to_word'), name='unique_synonym_pair'),
        ),
        migrations.AddConstraint(
            model_name='similar',
            constraint=models.UniqueConstraint(fields=('from_word', 'to_word'), name='unique_similars'),
        ),
        migrations.AddConstraint(
            model_name='form',
            constraint=models.UniqueConstraint(fields=('from_word', 'to_word'), name='unique_forms'),
        ),
        migrations.AddConstraint(
            model_name='antonym',
            constraint=models.UniqueConstraint(fields=('from_word', 'to_word'), name='unique_antonym_pair'),
        ),
    ]
