# Generated by Django 4.2.8 on 2023-12-15 18:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import languages.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('languages', '0002_alter_language_options_alter_language_isocode_and_more'),
        ('vocabulary', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='antonym',
            options={'verbose_name': 'Antonym', 'verbose_name_plural': 'Antonyms'},
        ),
        migrations.AlterModelOptions(
            name='collection',
            options={'get_latest_by': ['created', 'modified'], 'ordering': ['-created'], 'verbose_name': 'Collection', 'verbose_name_plural': 'Collections'},
        ),
        migrations.AlterModelOptions(
            name='definition',
            options={'get_latest_by': ['created', 'modified'], 'ordering': ['-created'], 'verbose_name': 'Definition', 'verbose_name_plural': 'Definitions'},
        ),
        migrations.AlterModelOptions(
            name='favoritecollection',
            options={'get_latest_by': ['created'], 'ordering': ['-created'], 'verbose_name': 'Favorite collection', 'verbose_name_plural': 'Favorite collections'},
        ),
        migrations.AlterModelOptions(
            name='favoriteword',
            options={'get_latest_by': ['created'], 'ordering': ['-created'], 'verbose_name': 'Favorite word', 'verbose_name_plural': 'Favorite words'},
        ),
        migrations.AlterModelOptions(
            name='form',
            options={'verbose_name': 'Form', 'verbose_name_plural': 'Forms'},
        ),
        migrations.AlterModelOptions(
            name='formsgroup',
            options={'ordering': ('-created', 'name'), 'verbose_name': 'Forms group', 'verbose_name_plural': 'Forms groups'},
        ),
        migrations.AlterModelOptions(
            name='imageassociation',
            options={'verbose_name': 'Association image', 'verbose_name_plural': 'Association images'},
        ),
        migrations.AlterModelOptions(
            name='note',
            options={'get_latest_by': ['created'], 'ordering': ['-created'], 'verbose_name': 'Заметка', 'verbose_name_plural': 'Notes'},
        ),
        migrations.AlterModelOptions(
            name='similar',
            options={'verbose_name': 'Similar', 'verbose_name_plural': 'Similars'},
        ),
        migrations.AlterModelOptions(
            name='synonym',
            options={'get_latest_by': ['created', 'modified'], 'ordering': ['-created'], 'verbose_name': 'Synonyms', 'verbose_name_plural': 'Synonyms'},
        ),
        migrations.AlterModelOptions(
            name='tag',
            options={'verbose_name': 'Tag', 'verbose_name_plural': 'Tags'},
        ),
        migrations.AlterModelOptions(
            name='type',
            options={'verbose_name': 'Type', 'verbose_name_plural': 'Types'},
        ),
        migrations.AlterModelOptions(
            name='usageexample',
            options={'get_latest_by': ['created', 'modified'], 'ordering': ['-created'], 'verbose_name': 'Usage example', 'verbose_name_plural': 'Usage examples'},
        ),
        migrations.AlterModelOptions(
            name='word',
            options={'get_latest_by': ['created', 'modified'], 'ordering': ['-created'], 'verbose_name': 'Word or phrase', 'verbose_name_plural': 'Words and phrases'},
        ),
        migrations.AlterModelOptions(
            name='worddefinitions',
            options={'get_latest_by': ['created'], 'ordering': ['-created'], 'verbose_name': 'Word definition', 'verbose_name_plural': 'Word definitions'},
        ),
        migrations.AlterModelOptions(
            name='wordsincollections',
            options={'get_latest_by': ['created'], 'ordering': ['-created'], 'verbose_name': 'Words in collections', 'verbose_name_plural': 'Words in collections'},
        ),
        migrations.AlterModelOptions(
            name='wordtranslation',
            options={'get_latest_by': ['created', 'modified'], 'ordering': ['-created'], 'verbose_name': 'Translation', 'verbose_name_plural': 'Translations'},
        ),
        migrations.AlterModelOptions(
            name='wordtranslations',
            options={'get_latest_by': ['created'], 'ordering': ['-created'], 'verbose_name': 'Word translation', 'verbose_name_plural': 'Word translations'},
        ),
        migrations.AlterModelOptions(
            name='wordusageexamples',
            options={'get_latest_by': ['created'], 'ordering': ['-created'], 'verbose_name': 'Word usage example', 'verbose_name_plural': 'Word usage examples'},
        ),
        migrations.AlterField(
            model_name='collection',
            name='description',
            field=models.TextField(blank=True, max_length=512, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='slug',
            field=models.SlugField(null=True, unique=True, verbose_name='Slug'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='title',
            field=models.CharField(max_length=32, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='Collection title'),
        ),
        migrations.AlterField(
            model_name='collection',
            name='words',
            field=models.ManyToManyField(blank=True, related_name='collections', through='vocabulary.WordsInCollections', to='vocabulary.word', verbose_name='Word in collection'),
        ),
        migrations.AlterField(
            model_name='definition',
            name='text',
            field=models.CharField(help_text='A definition of a word or phrase', max_length=1024, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='Definition'),
        ),
        migrations.AlterField(
            model_name='definition',
            name='translation',
            field=models.CharField(blank=True, max_length=1024, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='A translation of the definition'),
        ),
        migrations.AlterField(
            model_name='favoritecollection',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_for', to='vocabulary.collection', verbose_name='Collection'),
        ),
        migrations.AlterField(
            model_name='favoriteword',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_for', to='vocabulary.word', verbose_name='Word'),
        ),
        migrations.AlterField(
            model_name='formsgroup',
            name='slug',
            field=models.SlugField(null=True, unique=True, verbose_name='Slug'),
        ),
        migrations.AlterField(
            model_name='imageassociation',
            name='image',
            field=models.ImageField(blank=True, help_text='Image association', null=True, upload_to='words/associations/images', verbose_name='Изображение'),
        ),
        migrations.AlterField(
            model_name='imageassociation',
            name='name',
            field=models.CharField(blank=True, max_length=64, validators=[django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='Image name'),
        ),
        migrations.AlterField(
            model_name='imageassociation',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='vocabulary.word', verbose_name='Word'),
        ),
        migrations.AlterField(
            model_name='note',
            name='text',
            field=models.CharField(max_length=4096, verbose_name='Note text'),
        ),
        migrations.AlterField(
            model_name='note',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='vocabulary.word', verbose_name='Word'),
        ),
        migrations.AlterField(
            model_name='synonym',
            name='difference',
            field=models.CharField(blank=True, help_text='Difference between these %(class)ss', max_length=512, verbose_name='Difference'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(max_length=32, unique=True, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='Tag name'),
        ),
        migrations.AlterField(
            model_name='type',
            name='name',
            field=models.CharField(max_length=64, unique=True, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='Type name'),
        ),
        migrations.AlterField(
            model_name='type',
            name='name_en',
            field=models.CharField(max_length=64, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='Type name'),
        ),
        migrations.AlterField(
            model_name='type',
            name='name_ru',
            field=models.CharField(max_length=64, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='Type name'),
        ),
        migrations.AlterField(
            model_name='type',
            name='slug',
            field=models.SlugField(max_length=64, unique=True, verbose_name='Slug'),
        ),
        migrations.AlterField(
            model_name='type',
            name='sorting',
            field=models.PositiveIntegerField(default=0, help_text='increase to show at top of the list', verbose_name='Sorting order'),
        ),
        migrations.AlterField(
            model_name='usageexample',
            name='text',
            field=models.CharField(help_text='An usage example of a word or phrase', max_length=1024, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='Usage example'),
        ),
        migrations.AlterField(
            model_name='usageexample',
            name='translation',
            field=models.CharField(blank=True, max_length=1024, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='A translation of the example'),
        ),
        migrations.AlterField(
            model_name='word',
            name='activity',
            field=models.CharField(choices=[('I', 'Inactive'), ('A', 'Active'), ('M', 'Mastered')], default='I', max_length=8, verbose_name='Activity status'),
        ),
        migrations.AlterField(
            model_name='word',
            name='antonyms',
            field=models.ManyToManyField(blank=True, help_text='Words with opposite meanings', through='vocabulary.Antonym', to='vocabulary.word', verbose_name='Antonyms'),
        ),
        migrations.AlterField(
            model_name='word',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vocabulary', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AlterField(
            model_name='word',
            name='definitions',
            field=models.ManyToManyField(blank=True, related_name='definition_for', through='vocabulary.WordDefinitions', to='vocabulary.definition', verbose_name='Definitions'),
        ),
        migrations.AlterField(
            model_name='word',
            name='examples',
            field=models.ManyToManyField(blank=True, related_name='usage_example_for', through='vocabulary.WordUsageExamples', to='vocabulary.usageexample', verbose_name='Usage example'),
        ),
        migrations.AlterField(
            model_name='word',
            name='forms',
            field=models.ManyToManyField(blank=True, help_text='Word forms', through='vocabulary.Form', to='vocabulary.word', verbose_name='Forms'),
        ),
        migrations.AlterField(
            model_name='word',
            name='is_problematic',
            field=models.BooleanField(default=False, verbose_name='Is the word problematic for you'),
        ),
        migrations.AlterField(
            model_name='word',
            name='language',
            field=models.ForeignKey(default=languages.models.Language.get_default_pk, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='words', to='languages.language', verbose_name='Language'),
        ),
        migrations.AlterField(
            model_name='word',
            name='similars',
            field=models.ManyToManyField(blank=True, help_text='Words with similar pronunciation or spelling', through='vocabulary.Similar', to='vocabulary.word', verbose_name='Similars'),
        ),
        migrations.AlterField(
            model_name='word',
            name='slug',
            field=models.SlugField(max_length=4096, unique=True, verbose_name='Slug'),
        ),
        migrations.AlterField(
            model_name='word',
            name='synonyms',
            field=models.ManyToManyField(blank=True, help_text='Words with similar meanings', through='vocabulary.Synonym', to='vocabulary.word', verbose_name='Synonyms'),
        ),
        migrations.AlterField(
            model_name='word',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='words', to='vocabulary.tag', verbose_name='Word tags'),
        ),
        migrations.AlterField(
            model_name='word',
            name='text',
            field=models.CharField(max_length=512, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='Word or phrase'),
        ),
        migrations.AlterField(
            model_name='word',
            name='translations',
            field=models.ManyToManyField(blank=True, related_name='translation_for', through='vocabulary.WordTranslations', to='vocabulary.wordtranslation', verbose_name='Translations'),
        ),
        migrations.AlterField(
            model_name='word',
            name='types',
            field=models.ManyToManyField(blank=True, related_name='words', to='vocabulary.type', verbose_name='Type'),
        ),
        migrations.AlterField(
            model_name='worddefinitions',
            name='definition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.definition', verbose_name='Definition'),
        ),
        migrations.AlterField(
            model_name='worddefinitions',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.word', verbose_name='Word'),
        ),
        migrations.AlterField(
            model_name='wordsformgroups',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.word', verbose_name='Word'),
        ),
        migrations.AlterField(
            model_name='wordsincollections',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.collection', verbose_name='Collection'),
        ),
        migrations.AlterField(
            model_name='wordsincollections',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.word', verbose_name='Word'),
        ),
        migrations.AlterField(
            model_name='wordtranslation',
            name='language',
            field=models.ForeignKey(default=languages.models.Language.get_default_pk, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='words_translations', to='languages.language', verbose_name='Language'),
        ),
        migrations.AlterField(
            model_name='wordtranslation',
            name='text',
            field=models.CharField(help_text='A translation of a word or phrase', max_length=512, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.RegexValidator(message='Acceptable characters: Latin letters (A-Z, a-z), Cyrillic letters (А-Я, а-я), Hyphen, Exclamation point, Question mark, Dot, Comma, Colon, Apostrophe. Make sure word begin with a letter.', regex="^([A-Za-zА-Яа-я]+)([A-Za-zА-Яа-я-!?.,:' ]*)$")], verbose_name='Translation'),
        ),
        migrations.AlterField(
            model_name='wordtranslations',
            name='translation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.wordtranslation', verbose_name='Translation'),
        ),
        migrations.AlterField(
            model_name='wordtranslations',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.word', verbose_name='Word'),
        ),
        migrations.AlterField(
            model_name='wordusageexamples',
            name='example',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.usageexample', verbose_name='Usage example'),
        ),
        migrations.AlterField(
            model_name='wordusageexamples',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='vocabulary.word', verbose_name='Word'),
        ),
    ]
